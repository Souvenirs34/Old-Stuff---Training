const DODGER = document.getElementById('dodger')
const GAME = document.getElementById('game')
const GAME_HEIGHT = 400
const GAME_WIDTH = 400
const LEFT_ARROW = 37
const RIGHT_ARROW = 39
const ROCKS = []
const START = document.getElementById('start')

var gameInterval = null
var gameOver=0
var rockCount=0
var thisrockCount=0
var gameCount=0
var gameLevel=0
var levelChangeRock=0
var speed=1


function checkCollision(rock) {
  const top = positionToInteger(rock.style.top)
  if (top > GAME_HEIGHT-40) {
    const dodgerLeftEdge = positionToInteger(DODGER.style.left)
    const dodgerRightEdge = dodgerLeftEdge+40;
    const rockLeftEdge = positionToInteger(rock.style.left)
    const rockRightEdge = rockLeftEdge+20;
    if ((rockLeftEdge<=dodgerLeftEdge && rockRightEdge>=dodgerLeftEdge) ||
        (rockLeftEdge>=dodgerLeftEdge && rockRightEdge<=dodgerRightEdge) ||
        (rockLeftEdge<=dodgerRightEdge && rockRightEdge>=dodgerRightEdge)){
          return true
        }
  }
}


function createRock(x) {
  const rock = document.createElement('div')
  rock.className = 'rock'
  rock.style.left = `${x}px`
  var top = 0
  rock.style.top = `${top}px`
  if (levelChangeRock==5){
    //debugger2
    gameLevel++
    speed++
    levelChangeRock=0
  }
  GAME.appendChild(rock)
  ROCKS.push(rock)
  levelChangeRock++


  function moveRock() {
    if (gameOver==0){
      rock.style.top=`${top+=speed}px`
      if (checkCollision(rock)==true){
        gameOver=1
        endGame()
      }
      else if (top<GAME_HEIGHT-22){
        window.requestAnimationFrame(moveRock)
      }
      else if (top>GAME_HEIGHT-22){
          GAME.removeChild(rock)
          ROCKS.shift()
          rockCount++
          thisrockCount++
        }
     }
    }
  window.requestAnimationFrame(moveRock)
  moveRock()
  return rock

}

function endGame() {
  ROCKS.forEach(function(rock)
        {rock.remove()
        });
  clearInterval(gameInterval)
  window.removeEventListener('keydown', moveDodger)
  alert('YOU LOSE!')
  alert(`You dodged ${thisrockCount} this game for a total of ${rockCount} over ${gameCount} games! Game level reached: ${gameLevel}`)
  START.innerHTML = 'Play again?'
  START.style.display = 'inline'
}


function moveDodger(e) {
     if (e.which === LEFT_ARROW){
       e.preventDefault()
       e.stopPropagation()
       moveDodgerLeft()
     }
     if (e.which === RIGHT_ARROW){
       e.stopPropagation()
       e.preventDefault()
       moveDodgerRight()
     }
}

function moveDodgerLeft(){
    var leftNumbers = dodger.style.left.replace('px','')
    var left= parseInt(leftNumbers,10)
    if (left>4){
        var leftmove = 0
        function step() {
          dodger.style.left = `${left -= 2}px`
          if (leftmove < 5) {
            leftmove++
            window.requestAnimationFrame(step)
          }
        }
        window.requestAnimationFrame(step)
    }
  }

function moveDodgerRight(){
    var leftNumbers = dodger.style.left.replace('px','')
    var left= parseInt(leftNumbers,10)
    if (left<GAME_WIDTH-40){
      var rightmove=0
      function slide(){
        dodger.style.left=`${left+=2}px`
        if (rightmove <5){
          rightmove++
          window.requestAnimationFrame(slide)
        }
      }
      window.requestAnimationFrame(slide)
    }
  }

/**
 * @param {string} p The position property
 * @returns {number} The position as an integer (without 'px')
 */
function positionToInteger(p) {
  return parseInt(p.split('px')[0]) || 0
}

function start() {
  window.addEventListener('keydown', moveDodger)
  START.style.display = 'none'
  gameOver=0
  thisrockCount=0
  levelChangeRock=0
  gameCount++
  speed=1
  gameLevel=1
  gameInterval = setInterval(function() {
    createRock(Math.floor(Math.random() *  (GAME_WIDTH - 20)))
  }, 1000)
}
